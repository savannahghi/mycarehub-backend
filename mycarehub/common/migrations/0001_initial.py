# Generated by Django 3.2.9 on 2021-11-07 08:12

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import mycarehub.common.models.base_models
import mycarehub.common.models.common_models
import mycarehub.common.models.utils
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.UUIDField(blank=True, null=True)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField(blank=True, null=True)),
                ('name', models.TextField(unique=True)),
                ('mfl_code', models.IntegerField(help_text='MFL Code', unique=True)),
                ('county', models.CharField(choices=[('Nairobi', 'Nairobi'), ('Kajiado', 'Kajiado')], max_length=64)),
                ('sub_county', models.CharField(blank=True, choices=[('Dagoretti North', 'Dagoretti North'), ('Dagoretti South', 'Dagoretti South'), ('Embakasi Central', 'Embakasi Central'), ('Embakasi East', 'Embakasi East'), ('Embakasi North', 'Embakasi North'), ('Embakasi South', 'Embakasi South'), ('Embakasi West', 'Embakasi West'), ('Kajiado Central', 'Kajiado Central'), ('Kajiado East', 'Kajiado East'), ('Kajiado North', 'Kajiado North'), ('Kajiado West', 'Kajiado West'), ('Kamukunji', 'Kamukunji'), ('Kasarani', 'Kasarani'), ('Kibra', 'Kibra'), ('Langata', 'Langata'), ('Loitokitok', 'Loitokitok'), ('Makadara', 'Makadara'), ('Mathare', 'Mathare'), ('Roysambu', 'Roysambu'), ('Ruaraka', 'Ruaraka'), ('Starehe', 'Starehe'), ('Westlands', 'Westlands')], max_length=64, null=True)),
                ('constituency', models.CharField(blank=True, choices=[('Dagoretti North', 'Dagoretti North'), ('Dagoretti South', 'Dagoretti South'), ('Embakasi Central', 'Embakasi Central'), ('Embakasi East', 'Embakasi East'), ('Embakasi North', 'Embakasi North'), ('Embakasi South', 'Embakasi South'), ('Embakasi West', 'Embakasi West'), ('Kajiado Central', 'Kajiado Central'), ('Kajiado East', 'Kajiado East'), ('Kajiado North', 'Kajiado North'), ('Kajiado West', 'Kajiado West'), ('Kamukunji', 'Kamukunji'), ('Kasarani', 'Kasarani'), ('Kibra', 'Kibra'), ('Langata', 'Langata'), ('Magadi', 'Magadi'), ('Makadara', 'Makadara'), ('Mathare', 'Mathare'), ('Roysambu', 'Roysambu'), ('Ruaraka', 'Ruaraka'), ('Starehe', 'Starehe'), ('Westlands', 'Westlands')], max_length=64, null=True)),
                ('ward', models.CharField(blank=True, choices=[('Airbase', 'Airbase'), ('Babandogo', 'Babandogo'), ('California', 'California'), ('Clay City', 'Clay City'), ('Dalalekutuk', 'Dalalekutuk'), ('Dandora Area I', 'Dandora Area I'), ('Dandora Area II', 'Dandora Area II'), ('Dandora Area III', 'Dandora Area III'), ('Dandora Area Iv', 'Dandora Area Iv'), ('Eastleigh North', 'Eastleigh North'), ('Eastleigh South', 'Eastleigh South'), ('Embakasi', 'Embakasi'), ('Entonet/Lenkism', 'Entonet/Lenkism'), ("Ewuaso Oo Nkidong'i", "Ewuaso Oo Nkidong'i"), ('Gatini', 'Gatini'), ('Githurai', 'Githurai'), ('Harambee', 'Harambee'), ('Hospital', 'Hospital'), ('Huruma', 'Huruma'), ('Ildamat', 'Ildamat'), ('Iloodokilani', 'Iloodokilani'), ('Imara Daima', 'Imara Daima'), ('Imaroro', 'Imaroro'), ('Imbrikani/Eselelnkei', 'Imbrikani/Eselelnkei'), ('Kabiro', 'Kabiro'), ('Kahawa', 'Kahawa'), ('Kahawa West', 'Kahawa West'), ('Kangemi', 'Kangemi'), ('Kaputiei North', 'Kaputiei North'), ('Karen', 'Karen'), ('Kariobangi South', 'Kariobangi South'), ('Karioboangi North', 'Karioboangi North'), ('Karura', 'Karura'), ('Kasarani', 'Kasarani'), ('Kawangware', 'Kawangware'), ('Kayole Central', 'Kayole Central'), ('Kayole North', 'Kayole North'), ('Kayole South', 'Kayole South'), ('Keekonyokie', 'Keekonyokie'), ('Kenyawa-poka', 'Kenyawa-poka'), ('Kiamaiko', 'Kiamaiko'), ('Kileleshwa', 'Kileleshwa'), ('Kilimani', 'Kilimani'), ('Kimana', 'Kimana'), ('Kitengela', 'Kitengela'), ('Kitisuru', 'Kitisuru'), ('Komarock', 'Komarock'), ('Korogocho', 'Korogocho'), ('Kuku', 'Kuku'), ('Kwa Njenga', 'Kwa Njenga'), ('Kwa Rueben', 'Kwa Rueben'), ('Kware', 'Kware'), ('Laini Saba', 'Laini Saba'), ('Landimawe', 'Landimawe'), ('Lindi', 'Lindi'), ('Lower Savannah', 'Lower Savannah'), ('Lucky Summer', 'Lucky Summer'), ('Mabatini', 'Mabatini'), ('Magadi', 'Magadi'), ("MakinaSarang'ombe", "MakinaSarang'ombe"), ('Makongeni', 'Makongeni'), ('Maringo/Hamza', 'Maringo/Hamza'), ('Maringo/Hamza', 'Maringo/Hamza'), ('Matapato North', 'Matapato North'), ('Matapato South', 'Matapato South'), ('Mathare North', 'Mathare North'), ('Matopeni/Spring Valley', 'Matopeni/Spring Valley'), ('Mihango', 'Mihango'), ('Mosiro', 'Mosiro'), ('Mountain View', 'Mountain View'), ('Mowlem', 'Mowlem'), ('Mugumo-ini', 'Mugumo-ini'), ('Mutu-Ini', 'Mutu-Ini'), ('Mwiki', 'Mwiki'), ('Nairobi Central', 'Nairobi Central'), ('Nairobi South', 'Nairobi South'), ('Nairobi West', 'Nairobi West'), ('Ngando', 'Ngando'), ('Ngara', 'Ngara'), ('Ngei', 'Ngei'), ('Ngong', 'Ngong'), ('Njiru', 'Njiru'), ('Nkaimurunya', 'Nkaimurunya'), ('Nyayo Highrise', 'Nyayo Highrise'), ('Olkeri', 'Olkeri'), ('Oloolua', 'Oloolua'), ('Oloosirkon/Sholinke', 'Oloosirkon/Sholinke'), ('Ongata Rongai', 'Ongata Rongai'), ('Pangani', 'Pangani'), ('Parklands/Highridge', 'Parklands/Highridge'), ('Pipeline', 'Pipeline'), ('Pumwani', 'Pumwani'), ('Purko', 'Purko'), ('Riruta', 'Riruta'), ('Rombo', 'Rombo'), ('Roysambu', 'Roysambu'), ('Ruai', 'Ruai'), ('South C', 'South C'), ('Umoja I', 'Umoja I'), ('Umoja II', 'Umoja II'), ('Upper Savannah', 'Upper Savannah'), ('Utalii', 'Utalii'), ('Utawala', 'Utawala'), ('Uthiru/Ruthimitu', 'Uthiru/Ruthimitu'), ('Viwandani', 'Viwandani'), ('Waithaka', 'Waithaka'), ('Woodley/Kenyatta Golf Course', 'Woodley/Kenyatta Golf Course'), ('Zimmerman', 'Zimmerman'), ('Ziwani/Kariokor', 'Ziwani/Kariokor')], max_length=64, null=True)),
                ('operation_status', models.CharField(default='Operational', max_length=24)),
                ('registration_number', models.CharField(blank=True, max_length=64, null=True)),
                ('keph_level', models.CharField(blank=True, choices=[('Level 1', 'Level 1'), ('Level 2', 'Level 2'), ('Level 3', 'Level 3'), ('Level 4', 'Level 4'), ('Level 5', 'Level 5'), ('Level 6', 'Level 6')], max_length=12, null=True)),
                ('facility_type', models.CharField(blank=True, choices=[('Basic Health Centre', 'Basic Health Centre'), ('Comprehensive Teaching & Tertiary Referral Hospital', 'Comprehensive Teaching & Tertiary Referral Hospital'), ('Comprehensive health Centre', 'Comprehensive health Centre'), ('Dental Clinic', 'Dental Clinic'), ('Dialysis Center', 'Dialysis Center'), ('Dispensaries and clinic-out patient only', 'Dispensaries and clinic-out patient only'), ('Dispensary', 'Dispensary'), ('Farewell Home', 'Farewell Home'), ('Health Centre', 'Health Centre'), ('Laboratory', 'Laboratory'), ('Medical Center', 'Medical Center'), ('Medical Clinic', 'Medical Clinic'), ('Nursing Homes', 'Nursing Home'), ('Nursing and Maternity Home', 'Nursing and Maternity Home'), ('Ophthalmology', 'Ophthalmology'), ('Pharmacy', 'Pharmacy'), ('Primary care hospitals', 'Primary care hospital'), ('Radiology Clinic', 'Radiology Clinic'), ('Rehab. Center - Drug and Substance abuse', 'Rehab. Center - Drug and Substance abuse'), ('Secondary care hospitals', 'Secondary care hospital'), ('Specialized & Tertiary Referral hospitals', 'Specialized & Tertiary Referral hospital'), ('VCT', 'VCT')], max_length=64, null=True)),
                ('facility_type_category', models.CharField(blank=True, choices=[('DISPENSARY', 'Dispensary'), ('HEALTH CENTRE', 'Health Centre'), ('HOSPITALS', 'Hospital'), ('MEDICAL CENTER', 'Medical Center'), ('MEDICAL CLINIC', 'Medical Clinic'), ('NURSING HOME', 'Nursing Home'), ('Primary health  care services', 'Primary Health Care Service'), ('STAND ALONE', 'Stand Alone')], max_length=64, null=True)),
                ('facility_owner', models.CharField(blank=True, max_length=64, null=True)),
                ('owner_type', models.CharField(blank=True, choices=[('Private Practice', 'Private Practice'), ('Ministry of Health', 'Ministry of Health'), ('Faith Based Organization', 'Faith Based Organization'), ('Non-Governmental Organizations', 'Non-Governmental Organizations')], max_length=64, null=True)),
                ('regulatory_body', models.CharField(blank=True, max_length=64, null=True)),
                ('beds', models.IntegerField(default=0)),
                ('cots', models.IntegerField(default=0)),
                ('open_whole_day', models.BooleanField(default=False)),
                ('open_public_holidays', models.BooleanField(default=False)),
                ('open_weekends', models.BooleanField(default=False)),
                ('open_late_night', models.BooleanField(default=False)),
                ('approved', models.BooleanField(default=True)),
                ('public_visible', models.BooleanField(default=True)),
                ('closed', models.BooleanField(default=False)),
                ('lon', models.FloatField(default=0.0)),
                ('lat', models.FloatField(default=0.0)),
                ('is_mycarehub_facility', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'facilities',
                'ordering': ('-updated', '-created'),
                'abstract': False,
            },
            managers=[
                ('objects', mycarehub.common.models.common_models.FacilityManager()),
            ],
        ),
        migrations.CreateModel(
            name='FacilityAttachment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.UUIDField(blank=True, null=True)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField(blank=True, null=True)),
                ('content_type', models.CharField(choices=[('image/png', 'PNG'), ('image/jpeg', 'JPEG'), ('application/pdf', 'PDF'), ('application/vnd.ms-excel', 'xlsx'), ('application/msword', 'doc'), ('application/vnd.openxmlformats-officedocument.wordprocessingml.document.docx', 'docx'), ('application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx'), ('text/plain', 'text')], max_length=100)),
                ('data', models.FileField(max_length=65535, upload_to=mycarehub.common.models.utils.get_directory)),
                ('title', models.CharField(max_length=255)),
                ('creation_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('size', models.IntegerField(blank=True, help_text='The size of the attachment in bytes', null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('aspect_ratio', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField()),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
            },
            managers=[
                ('objects', mycarehub.common.models.base_models.AbstractBaseManager()),
            ],
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.UUIDField(blank=True, null=True)),
                ('updated_by', models.UUIDField(blank=True, null=True)),
                ('code', models.IntegerField(unique=True)),
                ('active', models.BooleanField(default=True)),
                ('deleted', models.BooleanField(default=False)),
                ('org_code', models.CharField(default='', editable=False, help_text='A unique code representing organisation registration', max_length=15, unique=True)),
                ('organisation_name', models.CharField(max_length=100, unique=True)),
                ('email_address', models.EmailField(max_length=100)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('description', models.TextField(blank=True, null=True)),
                ('postal_address', models.CharField(blank=True, max_length=100)),
                ('physical_address', models.TextField(blank=True)),
                ('default_country', models.CharField(choices=[('ABW', 'Aruba'), ('AFG', 'Afghanistan'), ('AGO', 'Angola'), ('AIA', 'Anguilla'), ('ALA', 'Åland Islands'), ('ALB', 'Albania'), ('AND', 'Andorra'), ('ARE', 'United Arab Emirates'), ('ARG', 'Argentina'), ('ARM', 'Armenia'), ('ASM', 'American Samoa'), ('ATA', 'Antarctica'), ('ATF', 'French Southern Territories'), ('ATG', 'Antigua and Barbuda'), ('AUS', 'Australia'), ('AUT', 'Austria'), ('AZE', 'Azerbaijan'), ('BDI', 'Burundi'), ('BEL', 'Belgium'), ('BEN', 'Benin'), ('BES', 'Bonaire, Sint Eustatius and Saba'), ('BFA', 'Burkina Faso'), ('BGD', 'Bangladesh'), ('BGR', 'Bulgaria'), ('BHR', 'Bahrain'), ('BHS', 'Bahamas'), ('BIH', 'Bosnia and Herzegovina'), ('BLM', 'Saint Barthélemy'), ('BLR', 'Belarus'), ('BLZ', 'Belize'), ('BMU', 'Bermuda'), ('BOL', 'Bolivia (Plurinational State of)'), ('BRA', 'Brazil'), ('BRB', 'Barbados'), ('BRN', 'Brunei Darussalam'), ('BTN', 'Bhutan'), ('BVT', 'Bouvet Island'), ('BWA', 'Botswana'), ('CAF', 'Central African Republic'), ('CAN', 'Canada'), ('CCK', 'Cocos (Keeling) Islands'), ('CHE', 'Switzerland'), ('CHL', 'Chile'), ('CHN', 'China'), ('CIV', "Côte d'Ivoire"), ('CMR', 'Cameroon'), ('COD', 'Congo (Democratic Republic of the)'), ('COG', 'Congo'), ('COK', 'Cook Islands'), ('COL', 'Colombia'), ('COM', 'Comoros'), ('CPV', 'Cabo Verde'), ('CRI', 'Costa Rica'), ('CUB', 'Cuba'), ('CUW', 'Curaçao'), ('CXR', 'Christmas Island'), ('CYM', 'Cayman Islands'), ('CYP', 'Cyprus'), ('CZE', 'Czech Republic'), ('DEU', 'Germany'), ('DJI', 'Djibouti'), ('DMA', 'Dominica'), ('DNK', 'Denmark'), ('DOM', 'Dominican Republic'), ('DZA', 'Algeria'), ('ECU', 'Ecuador'), ('EGY', 'Egypt'), ('ERI', 'Eritrea'), ('ESH', 'Western Sahara'), ('ESP', 'Spain'), ('EST', 'Estonia'), ('ETH', 'Ethiopia'), ('FIN', 'Finland'), ('FJI', 'Fiji'), ('FLK', 'Falkland Islands (Malvinas)'), ('FRA', 'France'), ('FRO', 'Faroe Islands'), ('FSM', 'Micronesia (Federated States of)'), ('GAB', 'Gabon'), ('GBR', 'United Kingdom of Great Britain and Northern Ireland'), ('GEO', 'Georgia'), ('GGY', 'Guernsey'), ('GHA', 'Ghana'), ('GIB', 'Gibraltar'), ('GIN', 'Guinea'), ('GLP', 'Guadeloupe'), ('GMB', 'Gambia'), ('GNB', 'Guinea-Bissau'), ('GNQ', 'Equatorial Guinea'), ('GRC', 'Greece'), ('GRD', 'Grenada'), ('GRL', 'Greenland'), ('GTM', 'Guatemala'), ('GUF', 'French Guiana'), ('GUM', 'Guam'), ('GUY', 'Guyana'), ('HKG', 'Hong Kong'), ('HMD', 'Heard Island and McDonald Islands'), ('HND', 'Honduras'), ('HRV', 'Croatia'), ('HTI', 'Haiti'), ('HUN', 'Hungary'), ('IDN', 'Indonesia'), ('IMN', 'Isle of Man'), ('IND', 'India'), ('IOT', 'British Indian Ocean Territory'), ('IRL', 'Ireland'), ('IRN', 'Iran (Islamic Republic of)'), ('IRQ', 'Iraq'), ('ISL', 'Iceland'), ('ISR', 'Israel'), ('ITA', 'Italy'), ('JAM', 'Jamaica'), ('JEY', 'Jersey'), ('JOR', 'Jordan'), ('JPN', 'Japan'), ('KAZ', 'Kazakhstan'), ('KEN', 'Kenya'), ('KGZ', 'Kyrgyzstan'), ('KHM', 'Cambodia'), ('KIR', 'Kiribati'), ('KNA', 'Saint Kitts and Nevis'), ('KOR', 'Korea (Republic of)'), ('KWT', 'Kuwait'), ('LAO', "Lao People's Democratic Republic"), ('LBN', 'Lebanon'), ('LBR', 'Liberia'), ('LBY', 'Libya'), ('LCA', 'Saint Lucia'), ('LIE', 'Liechtenstein'), ('LKA', 'Sri Lanka'), ('LSO', 'Lesotho'), ('LTU', 'Lithuania'), ('LUX', 'Luxembourg'), ('LVA', 'Latvia'), ('MAC', 'Macao'), ('MAF', 'Saint Martin (French part)'), ('MAR', 'Morocco'), ('MCO', 'Monaco'), ('MDA', 'Moldova (Republic of)'), ('MDG', 'Madagascar'), ('MDV', 'Maldives'), ('MEX', 'Mexico'), ('MHL', 'Marshall Islands'), ('MKD', 'Macedonia (the former Yugoslav Republic of)'), ('MLI', 'Mali'), ('MLT', 'Malta'), ('MMR', 'Myanmar'), ('MNE', 'Montenegro'), ('MNG', 'Mongolia'), ('MNP', 'Northern Mariana Islands'), ('MOZ', 'Mozambique'), ('MRT', 'Mauritania'), ('MSR', 'Montserrat'), ('MTQ', 'Martinique'), ('MUS', 'Mauritius'), ('MWI', 'Malawi'), ('MYS', 'Malaysia'), ('MYT', 'Mayotte'), ('NAM', 'Namibia'), ('NCL', 'New Caledonia'), ('NER', 'Niger'), ('NFK', 'Norfolk Island'), ('NGA', 'Nigeria'), ('NIC', 'Nicaragua'), ('NIU', 'Niue'), ('NLD', 'Netherlands'), ('NOR', 'Norway'), ('NPL', 'Nepal'), ('NRU', 'Nauru'), ('NZL', 'New Zealand'), ('OMN', 'Oman'), ('PAK', 'Pakistan'), ('PAN', 'Panama'), ('PCN', 'Pitcairn'), ('PER', 'Peru'), ('PHL', 'Philippines'), ('PLW', 'Palau'), ('PNG', 'Papua New Guinea'), ('POL', 'Poland'), ('PRI', 'Puerto Rico'), ('PRK', "Korea (Democratic People's Republic of)"), ('PRT', 'Portugal'), ('PRY', 'Paraguay'), ('PSE', 'Palestine, State of'), ('PYF', 'French Polynesia'), ('QAT', 'Qatar'), ('REU', 'Reunion'), ('ROU', 'Romania'), ('RUS', 'Russian Federation'), ('RWA', 'Rwanda'), ('SAU', 'Saudi Arabia'), ('SDN', 'Sudan'), ('SEN', 'Senegal'), ('SGP', 'Singapore'), ('SGS', 'South Georgia and the South Sandwich Islands'), ('SHN', 'Saint Helena, Ascension and Tristan da Cunha'), ('SJM', 'Svalbard and Jan Mayen'), ('SLB', 'Solomon Islands'), ('SLE', 'Sierra Leone'), ('SLV', 'El Salvador'), ('SMR', 'San Marino'), ('SOM', 'Somalia'), ('SPM', 'Saint Pierre and Miquelon'), ('SRB', 'Serbia'), ('SSD', 'South Sudan'), ('STP', 'Sao Tome and Principe'), ('SUR', 'Suriname'), ('SVK', 'Slovakia'), ('SVN', 'Slovenia'), ('SWE', 'Sweden'), ('SWZ', 'Swaziland'), ('SXM', 'Sint Maarten (Dutch part)'), ('SYC', 'Seychelles'), ('SYR', 'Syrian Arab Republic'), ('TCA', 'Turks and Caicos Islands'), ('TCD', 'Chad'), ('TGO', 'Togo'), ('THA', 'Thailand'), ('TJK', 'Tajikistan'), ('TKL', 'Tokelau'), ('TKM', 'Turkmenistan'), ('TLS', 'Timor-Leste'), ('TON', 'Tonga'), ('TTO', 'Trinidad and Tobago'), ('TUN', 'Tunisia'), ('TUR', 'Turkey'), ('TUV', 'Tuvalu'), ('TWN', 'Taiwan, Province of China'), ('TZA', 'Tanzania, United Republic of'), ('UGA', 'Uganda'), ('UKR', 'Ukraine'), ('UMI', 'United States Minor Outlying Islands'), ('URY', 'Uruguay'), ('USA', 'United States of America'), ('UZB', 'Uzbekistan'), ('VAT', 'Holy See'), ('VCT', 'Saint Vincent and the Grenadines'), ('VEN', 'Venezuela (Bolivarian Republic of)'), ('VGB', 'Virgin Islands (British)'), ('VIR', 'Virgin Islands (U.S.)'), ('VNM', 'Viet Nam'), ('VUT', 'Vanuatu'), ('WLF', 'Wallis and Futuna'), ('WSM', 'Samoa'), ('YEM', 'Yemen'), ('ZAF', 'South Africa'), ('ZMB', 'Zambia'), ('ZWE', 'Zimbabwe')], default='KEN', max_length=255)),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OrganisationSequenceGenerator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='UserFacilityAllotment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_by', models.UUIDField(blank=True, null=True)),
                ('updated', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_by', models.UUIDField(blank=True, null=True)),
                ('allotment_type', models.CharField(choices=[('facility', 'By Facility'), ('region', 'By Region'), ('both', 'By Both Facility and Region')], max_length=10)),
                ('region_type', models.CharField(blank=True, choices=[('county', 'County'), ('constituency', 'Constituency'), ('sub_county', 'Sub County'), ('ward', 'Ward')], max_length=20, null=True)),
                ('counties', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('Nairobi', 'Nairobi'), ('Kajiado', 'Kajiado')], max_length=150, null=True), blank=True, help_text='All the facilities in the selected counties will be allocated to the selected user.', null=True, size=None)),
                ('constituencies', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('Dagoretti North', 'Dagoretti North'), ('Dagoretti South', 'Dagoretti South'), ('Embakasi Central', 'Embakasi Central'), ('Embakasi East', 'Embakasi East'), ('Embakasi North', 'Embakasi North'), ('Embakasi South', 'Embakasi South'), ('Embakasi West', 'Embakasi West'), ('Kajiado Central', 'Kajiado Central'), ('Kajiado East', 'Kajiado East'), ('Kajiado North', 'Kajiado North'), ('Kajiado West', 'Kajiado West'), ('Kamukunji', 'Kamukunji'), ('Kasarani', 'Kasarani'), ('Kibra', 'Kibra'), ('Langata', 'Langata'), ('Magadi', 'Magadi'), ('Makadara', 'Makadara'), ('Mathare', 'Mathare'), ('Roysambu', 'Roysambu'), ('Ruaraka', 'Ruaraka'), ('Starehe', 'Starehe'), ('Westlands', 'Westlands')], max_length=150, null=True), blank=True, help_text='All the facilities in the selected constituencies will be allocated to the selected user.', null=True, size=None)),
                ('sub_counties', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('Dagoretti North', 'Dagoretti North'), ('Dagoretti South', 'Dagoretti South'), ('Embakasi Central', 'Embakasi Central'), ('Embakasi East', 'Embakasi East'), ('Embakasi North', 'Embakasi North'), ('Embakasi South', 'Embakasi South'), ('Embakasi West', 'Embakasi West'), ('Kajiado Central', 'Kajiado Central'), ('Kajiado East', 'Kajiado East'), ('Kajiado North', 'Kajiado North'), ('Kajiado West', 'Kajiado West'), ('Kamukunji', 'Kamukunji'), ('Kasarani', 'Kasarani'), ('Kibra', 'Kibra'), ('Langata', 'Langata'), ('Loitokitok', 'Loitokitok'), ('Makadara', 'Makadara'), ('Mathare', 'Mathare'), ('Roysambu', 'Roysambu'), ('Ruaraka', 'Ruaraka'), ('Starehe', 'Starehe'), ('Westlands', 'Westlands')], max_length=150, null=True), blank=True, help_text='All the facilities in the selected sub counties will be allocated to the selected user.', null=True, size=None)),
                ('wards', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('Airbase', 'Airbase'), ('Babandogo', 'Babandogo'), ('California', 'California'), ('Clay City', 'Clay City'), ('Dalalekutuk', 'Dalalekutuk'), ('Dandora Area I', 'Dandora Area I'), ('Dandora Area II', 'Dandora Area II'), ('Dandora Area III', 'Dandora Area III'), ('Dandora Area Iv', 'Dandora Area Iv'), ('Eastleigh North', 'Eastleigh North'), ('Eastleigh South', 'Eastleigh South'), ('Embakasi', 'Embakasi'), ('Entonet/Lenkism', 'Entonet/Lenkism'), ("Ewuaso Oo Nkidong'i", "Ewuaso Oo Nkidong'i"), ('Gatini', 'Gatini'), ('Githurai', 'Githurai'), ('Harambee', 'Harambee'), ('Hospital', 'Hospital'), ('Huruma', 'Huruma'), ('Ildamat', 'Ildamat'), ('Iloodokilani', 'Iloodokilani'), ('Imara Daima', 'Imara Daima'), ('Imaroro', 'Imaroro'), ('Imbrikani/Eselelnkei', 'Imbrikani/Eselelnkei'), ('Kabiro', 'Kabiro'), ('Kahawa', 'Kahawa'), ('Kahawa West', 'Kahawa West'), ('Kangemi', 'Kangemi'), ('Kaputiei North', 'Kaputiei North'), ('Karen', 'Karen'), ('Kariobangi South', 'Kariobangi South'), ('Karioboangi North', 'Karioboangi North'), ('Karura', 'Karura'), ('Kasarani', 'Kasarani'), ('Kawangware', 'Kawangware'), ('Kayole Central', 'Kayole Central'), ('Kayole North', 'Kayole North'), ('Kayole South', 'Kayole South'), ('Keekonyokie', 'Keekonyokie'), ('Kenyawa-poka', 'Kenyawa-poka'), ('Kiamaiko', 'Kiamaiko'), ('Kileleshwa', 'Kileleshwa'), ('Kilimani', 'Kilimani'), ('Kimana', 'Kimana'), ('Kitengela', 'Kitengela'), ('Kitisuru', 'Kitisuru'), ('Komarock', 'Komarock'), ('Korogocho', 'Korogocho'), ('Kuku', 'Kuku'), ('Kwa Njenga', 'Kwa Njenga'), ('Kwa Rueben', 'Kwa Rueben'), ('Kware', 'Kware'), ('Laini Saba', 'Laini Saba'), ('Landimawe', 'Landimawe'), ('Lindi', 'Lindi'), ('Lower Savannah', 'Lower Savannah'), ('Lucky Summer', 'Lucky Summer'), ('Mabatini', 'Mabatini'), ('Magadi', 'Magadi'), ("MakinaSarang'ombe", "MakinaSarang'ombe"), ('Makongeni', 'Makongeni'), ('Maringo/Hamza', 'Maringo/Hamza'), ('Maringo/Hamza', 'Maringo/Hamza'), ('Matapato North', 'Matapato North'), ('Matapato South', 'Matapato South'), ('Mathare North', 'Mathare North'), ('Matopeni/Spring Valley', 'Matopeni/Spring Valley'), ('Mihango', 'Mihango'), ('Mosiro', 'Mosiro'), ('Mountain View', 'Mountain View'), ('Mowlem', 'Mowlem'), ('Mugumo-ini', 'Mugumo-ini'), ('Mutu-Ini', 'Mutu-Ini'), ('Mwiki', 'Mwiki'), ('Nairobi Central', 'Nairobi Central'), ('Nairobi South', 'Nairobi South'), ('Nairobi West', 'Nairobi West'), ('Ngando', 'Ngando'), ('Ngara', 'Ngara'), ('Ngei', 'Ngei'), ('Ngong', 'Ngong'), ('Njiru', 'Njiru'), ('Nkaimurunya', 'Nkaimurunya'), ('Nyayo Highrise', 'Nyayo Highrise'), ('Olkeri', 'Olkeri'), ('Oloolua', 'Oloolua'), ('Oloosirkon/Sholinke', 'Oloosirkon/Sholinke'), ('Ongata Rongai', 'Ongata Rongai'), ('Pangani', 'Pangani'), ('Parklands/Highridge', 'Parklands/Highridge'), ('Pipeline', 'Pipeline'), ('Pumwani', 'Pumwani'), ('Purko', 'Purko'), ('Riruta', 'Riruta'), ('Rombo', 'Rombo'), ('Roysambu', 'Roysambu'), ('Ruai', 'Ruai'), ('South C', 'South C'), ('Umoja I', 'Umoja I'), ('Umoja II', 'Umoja II'), ('Upper Savannah', 'Upper Savannah'), ('Utalii', 'Utalii'), ('Utawala', 'Utawala'), ('Uthiru/Ruthimitu', 'Uthiru/Ruthimitu'), ('Viwandani', 'Viwandani'), ('Waithaka', 'Waithaka'), ('Woodley/Kenyatta Golf Course', 'Woodley/Kenyatta Golf Course'), ('Zimmerman', 'Zimmerman'), ('Ziwani/Kariokor', 'Ziwani/Kariokor')], max_length=150, null=True), blank=True, help_text='All the facilities in the selected wards will be allocated to the selected user.', null=True, size=None)),
                ('facilities', models.ManyToManyField(blank=True, to='common.Facility')),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='common_userfacilityallotment_related', to='common.organisation')),
            ],
            options={
                'ordering': ('-updated', '-created'),
                'abstract': False,
            },
            managers=[
                ('objects', mycarehub.common.models.base_models.AbstractBaseManager()),
            ],
        ),
    ]
